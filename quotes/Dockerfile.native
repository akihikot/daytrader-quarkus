FROM quay.io/quarkus/centos-quarkus-maven:21.1.0-java11 AS build

ARG DB_KIND=postgresql

COPY --chown=quarkus commons/pom.xml /usr/src/commons/
COPY --chown=quarkus quotes/pom.xml /usr/src/app/

RUN mvn -f /usr/src/commons/pom.xml -B de.qaware.maven:go-offline-maven-plugin:1.2.5:resolve-dependencies
RUN mvn -f /usr/src/app/pom.xml -B de.qaware.maven:go-offline-maven-plugin:1.2.5:resolve-dependencies

COPY --chown=quarkus quotes/src /usr/src/app/src
COPY --chown=quarkus commons/src /usr/src/commons/src

RUN mvn -f /usr/src/commons/pom.xml clean install
RUN mvn -f /usr/src/app/pom.xml -Pnative clean package\
  -Dquarkus.native.native-image-xmx=8g\
  -Dquarkus.native.additional-build-args="--initialize-at-run-time=org.apache.http.impl.auth.NTLMEngineImpl"\
  -Dquarkus.native.resources.includes="**"\
  -Dquarkus.datasource.db-kind=${DB_KIND}

## Stage 2 : create the docker final image
FROM registry.access.redhat.com/ubi8/ubi-minimal
WORKDIR /work/
COPY --from=build /usr/src/app/target/*-runner /work/application

# set up permissions for user `1001`
RUN chmod 775 /work /work/application \
  && chown -R 1001 /work \
  && chmod -R "g+rwX" /work \
  && chown -R 1001:root /work

EXPOSE 8080
USER 1001

CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]
